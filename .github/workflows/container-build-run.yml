name: Build and Test

on:
  pull_request:
    branches:
      - '*'
  push:
    branches:
      - '*'

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Create .env file
        run: |
          echo "SCIENCEDIRECT_APIKEY=${{secrets.SCIENCEDIRECT_APIKEY}}" >> .env
          echo "SCOPUS_APIKEY=${{secrets.SCOPUS_APIKEY}}" >> .env
          echo "DATABASE_URL=${{secrets.DATABASE_URL}}" >> .env
          echo "PYTHONPATH=./backend" >> .env
          echo "POSTGRES_USER=${{secrets.POSTGRES_USER}}" >> .env
          echo "POSTGRES_PASSWORD=${{secrets.POSTGRES_PASSWORD}}" >> .env
          echo "POSTGRES_DB=${{secrets.POSTGRES_DB}}" >> .env
          echo "POSTGRES_SERVER=${{secrets.POSTGRES_SERVER}}" >> .env
          echo "POSTGRES_PORT=${{secrets.POSTGRES_PORT}}" >> .env
          echo "SECRET_KEY=${{secrets.SECRET_KEY}}" >> .env
          echo "ENCRYPTION_KEY=${{secrets.ENCRYPTION_KEY}}" >> .env
          echo "HOST_IP=${{secrets.HOST_IP}}" >> .env
          echo "TEST_USER=${{ secrets.TEST_USER}}" >> .env
          echo "TEST_PASSWORD: ${{secrets.TEST_PASSWORD}}" >> .env

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | jq -r '.tag_name')/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
        shell: bash

      - name: Build and Test with Docker Compose
        run: |
          docker-compose -f docker/docker-compose-postgres.yml --env-file .env up -d --build
      - name: Tear down Docker Compose
        run: docker-compose down