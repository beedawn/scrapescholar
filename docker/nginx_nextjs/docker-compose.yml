services:
  

  nginx:
    image: nginx
    # build:
    #   context: .
    #   dockerfile: ../../docker/nginx/Dockerfile  
    volumes:
      - ./templates:/etc/nginx/templates
      - ./default.conf:/etc/nginx/default.conf
      - ./start_nginx.sh:/docker-entrypoint.d/start_nginx.sh
      - ./wait-for-it.sh:/wait-for-it.sh 
      - ./certbot/conf/:/etc/nginx/ssl/:ro
    ports:
      - "80:80"
      - "443:443"
    environment:
      - NGINX_HOST=localhost
      - NGINX_PORT=80
      - SERVER_NAME=localhost
    depends_on:
      - nextjs
      #need to chmod +x start_nginx.sh
    entrypoint: ["/bin/sh", "-c", "/wait-for-it.sh nextjs:3000 -- /docker-entrypoint.d/start_nginx.sh"]
    networks:
      - mynetwork
      
  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw
    networks:
      - mynetwork





  nextjs:
    # image: node:20 
    build:
      context: ../../client/scrapescholar_client  
      dockerfile: ../../docker/nextjs/Dockerfile 
    working_dir: /app
    volumes:
      - ../../client/scrapescholar_client:/app

    #only need if you want to expose port 3000 and bypass nginx proxy
    #ports:
      #- "3000:3000"
  
    command: "npm run dev -- --hostname 0.0.0.0"  #  "npm start" for production
    environment:
      - NODE_ENV=development  # "production" for production builds
    networks:
      - mynetwork

networks:
  mynetwork:
    driver: bridge
  
  
  

